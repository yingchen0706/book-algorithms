import java.io.*;

public class QuickFind {
  int id[];
  int n;
  public QuickFind(int _n) {
    n = _n;
  	id = new int[n];
    for (int i = 0; i < n; i++) {
  	  id[i] = i;
    }
  }
  
  public void Union(int p, int q) {
    if (Connected(p, q)) {
      return;
    }
    
    int oldqV = id[q];
    
    for(int i= 0; i < n; i++) {
      if (id[i] == oldqV) {
      	id[i] = id[p];
      }
    }
    for(int i= 0; i < n; i++) {
      System.out.print(id[i]);
    }
    System.out.println();
  }
  
  public boolean Connected(int p, int q) {
    return (id[p] == id[q]);
  }
  
  public static void main(String args[]) {
  	QuickFind qf = new QuickFind(8);
    qf.Union(0,1);
    qf.Union(3,4);
    qf.Union(5,6);
    qf.Union(0,6);
    qf.Union(2,6);
    System.out.println(qf.Connected(1,2));
  }
  // 0 1 2 3 4 5 6 7 
  // 0 0 2 3 4 5 6 7 
  // 0 0 2 3 3 5 6 7
  // 0 0 2 3 3 5 5 7
  // 0 0 2 3 3 0 0 7
  // 2 2 2 3 3 2 2 7
}
